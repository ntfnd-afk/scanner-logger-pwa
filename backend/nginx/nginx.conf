# Nginx конфигурация для Scanner Logger

user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Логирование
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time';

    access_log  /var/log/nginx/access.log  main;

    # Оптимизации
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Upstream для FastAPI backend
    upstream backend {
        server backend:8000;
    }

    # HTTP сервер (редирект на HTTPS в продакшене)
    server {
        listen 80;
        server_name _;

        # Для Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Редирект на HTTPS (раскомментируй в продакшене)
        # return 301 https://$host$request_uri;

        # Для dev окружения - оставить HTTP доступ
        location / {
            # Reverse proxy к FastAPI backend
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Таймауты
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check
        location /health {
            proxy_pass http://backend/health;
            access_log off;
        }
    }

    # HTTPS сервер (раскомментируй после получения SSL сертификатов)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;

    #     # SSL сертификаты (Let's Encrypt)
    #     ssl_certificate /etc/nginx/ssl/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    #     # SSL настройки (Mozilla Intermediate compatibility)
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;

    #     # HSTS (HTTP Strict Transport Security)
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    #     # Security headers
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header X-XSS-Protection "1; mode=block" always;

    #     # API endpoints (FastAPI backend)
    #     location /api/ {
    #         proxy_pass http://backend/api/;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;

    #         # CORS headers (если PWA на другом домене)
    #         add_header Access-Control-Allow-Origin "https://your-pwa-domain.com" always;
    #         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    #         add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-API-Key" always;
    #         add_header Access-Control-Max-Age 3600 always;

    #         # Preflight requests
    #         if ($request_method = OPTIONS) {
    #             return 204;
    #         }
    #     }

    #     # Health check
    #     location /health {
    #         proxy_pass http://backend/health;
    #         access_log off;
    #     }

    #     # Docs (опционально, можно закрыть в продакшене)
    #     location /docs {
    #         proxy_pass http://backend/docs;
    #         proxy_set_header Host $host;
    #     }

    #     location /redoc {
    #         proxy_pass http://backend/redoc;
    #         proxy_set_header Host $host;
    #     }

    #     # PWA статика (если раздается с этого же сервера)
    #     # location / {
    #     #     root /usr/share/nginx/html;
    #     #     try_files $uri $uri/ /index.html;
    #     #     
    #     #     # Кэширование статических файлов
    #     #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    #     #         expires 1y;
    #     #         add_header Cache-Control "public, immutable";
    #     #     }
    #     # }
    # }
}

